{
  "name": "KP.GmailClient",
  "tagline": "A Gmail client for C#",
  "body": "[![Build Status](https://travis-ci.org/kpstolk/KP.GmailClient.svg?branch=master)](https://travis-ci.org/kpstolk/KP.GmailClient)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/tqv09fs3fo9a37t0?svg=true)](https://ci.appveyor.com/project/KP/gmail-api)\r\n<a href=\"https://scan.coverity.com/projects/kpstolk-kp-gmailclient\">\r\n  <img alt=\"Coverity Scan Build Status\"\r\n       src=\"https://scan.coverity.com/projects/5330/badge.svg\"/>\r\n</a>\r\n\r\n# KP.GmailClient\r\nThis is an alternative client for the auto generated Google.Apis.Gmail.v1 Client Library.\r\n\r\n- It's easy to use\r\n- Has added extension methods to make common tasks even more easier\r\n- Supports Async\r\n- Did I mention easy?\r\n\r\n## Prerequisites\r\n1. Create a new project in the Google Cloud Platform -> https://console.cloud.google.com/home/dashboard\r\n2. Enable the Gmail API.\r\n3. Create a service account for the project -> https://console.cloud.google.com/iam-admin/serviceaccounts/\r\n4. Create and download a new key as JSON file.\r\n5. (only for G Suite users) Go to the G Suite Admin console and select the scopes, more on that here https://developers.google.com/identity/protocols/OAuth2ServiceAccount#delegatingauthority\r\n\r\n## Setup\r\n``` csharp\r\n// Either use from config\r\nconst GmailScopes scopes = GmailScopes.Readonly | GmailScopes.Compose;\r\nstring privateKey = SettingsManager.GetPrivateKey();\r\nstring tokenUri = SettingsManager.GetTokenUri();\r\nstring clientEmail = SettingsManager.GetClientEmail();\r\nstring emailAddress = SettingsManager.GetEmailAddress();\r\nServiceAccountCredential accountCredential = new ServiceAccountCredential\r\n{\r\n    PrivateKey = privateKey,\r\n    TokenUri = tokenUri,\r\n    ClientEmail = clientEmail\r\n};\r\nvar client = new GmailClient(accountCredential, emailAddress, scopes);\r\n\r\n// Or use from downloaded JSON file directly\r\nconst string path = \"C:\\\\Users\\\\Me\\\\Documents\\\\Gmail-Project.json\";\r\nvar initializer = GmailClientInitializer.Initialize(path, scopes);\r\nclient = new GmailClient(initializer, emailAddress);\r\n```\r\n\r\n## Usage examples\r\n``` csharp\r\n// Send a plain text email\r\nMessage sentMessage = await client.Messages.SendAsync(emailAddress, \"The subject\", \"Plain text body\");\r\n\r\n// Send a HTML email\r\nsentMessage = await client.Messages.SendAsync(emailAddress, \"The subject\", \"<h1>HTML body</h1>\", isBodyHtml: true);\r\n\r\n// Get the users profile\r\nProfile profile = await client.GetProfileAsync();\r\n\r\n// Get inbox messages\r\nIList<Message> messages = await client.Messages.ListAsync();\r\n\r\n// Get starred messages\r\nIList<Message> starredMessages = await client.Messages.ListByLabelAsync(Label.Starred);\r\n\r\n// List all labels\r\nIList<Label> labels = await client.Labels.ListAsync();\r\n\r\n// List all drafts\r\nIList<Draft> drafts = await client.Drafts.ListAsync();\r\n```\r\n",
  "google": "UA-1426133-13",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
{"name":"KP.GmailApi","tagline":"An alternative library of the Gmail API NuGet package.","body":"# KP.GmailApi\r\nAn alternative library of the Gmail API NuGet package.\r\n\r\n[![Build Status](https://travis-ci.org/kpstolk/KP.GmailApi.svg?branch=master)](https://travis-ci.org/kpstolk/KP.GmailApi)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/tqv09fs3fo9a37t0?svg=true)](https://ci.appveyor.com/project/kpstolk/gmail-api)\r\n[![Coverage Status](https://coveralls.io/repos/kpstolk/KP.GmailApi/badge.svg)](https://coveralls.io/r/kpstolk/KP.GmailApi)\r\n\r\n## Setup\r\n``` csharp\r\nvar tokenManager = new OAuth2TokenManager(clientId, clientSecret);\r\n// Provide a refresh token (required once)\r\nif (!tokenManager.HasTokenSetup())\r\n{\r\n    // Client ID and secret of your project,\r\n    // see the Dev Console (https://console.developers.google.com/project)\r\n    var tokenHelper = new TokenAccessHelper(clientId, clientSecret);\r\n\r\n    // Get a refresh token, launches a browser for user interaction:\r\n    string authCode = tokenHelper.GetAuthorizationCode();\r\n    string refreshToken = tokenHelper.GetRefreshToken(authCode);\r\n\r\n    // First time required only\r\n    tokenManager.Setup(refreshToken, false);\r\n}\r\n\r\nvar service = new GmailService(tokenManager);\r\n```\r\n\r\n## Usage examples\r\n``` csharp\r\n// Get the users profile\r\nservice.GetProfile();\r\n\r\n// Get inbox messages\r\nservice.Messages.List();\r\n\r\n// Get starred messages\r\nservice.Messages.ListByLabel(Label.Starred);\r\n\r\n// List all labels\r\nservice.Labels.List();\r\n```\r\n","google":"UA-1426133-13","note":"Don't delete this file! It's used internally to help with page regeneration."}